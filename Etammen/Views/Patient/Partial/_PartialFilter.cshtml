@model Etammen.ViewModels.JSONMainViewModelHolder
@using System.Text.Json;

@{
    var myModel = JsonSerializer.Deserialize<MainViewModel>(Model.JSONdata);
}


<style>
    .filter-container {
        font-family: Arial, sans-serif;
    }

    .filter-title {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .filter-item {
        margin-bottom: 10px;
    }

    .collapsible-trigger {
        background-color: #f4f4f4;
        border: none;
        padding: 10px;
        width: 100%;
        text-align: left;
        cursor: pointer;
        outline: none;
        transition: background-color 0.3s;
    }

        .collapsible-trigger:hover {
            background-color: #e0e0e0;
        }

    .collapsible-content {
        display: none;
        padding: 10px;
    }

        .collapsible-content a {
            display: block;
            padding: 5px 0;
            color: #333;
            text-decoration: none;
        }

            .collapsible-content a:hover {
                background-color: #f0f0f0;
            }

    .filter-item.active .collapsible-content {
        display: block;
    }
</style>


<div class="filter-container">
    <div class="filter-header">
        <span>
            Filters
        </span>
        <br />
    </div>
    <div class="filter-content">
        <form id="filterForm" asp-action="Filter" asp-controller="Patient" onsubmit="updateAndSubmit(event,'filterForm')">

            <input type="hidden" name="JSONdata" />

            <div class="filter-item">
                <a id="degree" class="collapsible-trigger" data-target="title">Degree</a>

                <div style="display:none" class="collapsible-content" id="title-degree">
                    <div class="checkbox">
                        <input type="checkbox" id="title-professor" checked="@myModel.IsProfessor">
                        <label for="title-professor">Professor</label>
                    </div>
                    <div class="checkbox">
                        <input type="checkbox" id="title-lecturer" checked="@myModel.IsLecturer">
                        <label for="title-lecturer">Lecturer</label>
                    </div>
                    <div class="checkbox">
                        <input type="checkbox" id="title-consultant" checked="@myModel.IsConsultant">
                        <label for="title-consultant">Consultant</label>
                    </div>
                    <div class="checkbox">
                        <input type="checkbox" id="title-specialist" checked="@myModel.IsSpecialist">
                        <label for="title-specialist">Specialist</label>
                    </div>
                    <div class="checkbox">
                        <input type="checkbox" id="title-Gp" checked="@myModel.IsGP">
                        <label for="title-Gp">General Practitioner</label>
                    </div>
                </div>
            </div>


            @{
                var genderValues = Enum.GetValues(typeof(Gender)).Cast<Gender>().ToList();
            }
            <div class="filter-item">
                <a id="gender" class="collapsible-trigger" data-target="title">Gender</a>
                <div style="display:none" class="collapsible-content-gender" id="title-gender">
                    <div class="checkbox">
                        @{
                            bool isMale = myModel.Gender == Gender.Male;
                        }
                        <input type="radio" class="gender" value="@genderValues[0]" name ="gender" checked="@isMale">
                        <label for="gender">@genderValues[0]</label>
                    </div>
                    <div class="checkbox">
                        <input type="radio" class="gender" value="@genderValues[1]" name="gender"  checked="@(!isMale)">
                        <label for="gender">@genderValues[1]</label>
                    </div>
                    <div class="checkbox">
                        <input type="radio" class="gender" name="gender" checked="@(myModel.Gender == null)">
                        <label for="gender">All</label>
                    </div>
                </div>
            </div>

            <div class="filter-item">
                <a id="fees" class="collapsible-trigger" data-target="title">Fees</a>
                <div style="display:none" class="collapsible-content-fees" id="title-fees">
                    <div class="checkbox">
                        <input type="checkbox" id="title-fees-1" checked="@myModel.IsFeesLessThan100"> 
                        <label for="title-fees-1">less than 100</label>
                    </div>
                    <div class="checkbox">
                        <input type="checkbox" id="title-fees-2" checked="@myModel.IsFees100to200">
                        <label for="title-fees-2">From 100 to 200</label>
                    </div>
                    <div class="checkbox">
                        <input type="checkbox" id="title-fees-3" checked="@myModel.IsFees200to300">
                        <label for="title-fees-3">From 200 to 300</label>
                    </div>
                    <div class="checkbox">
                        <input type="checkbox" id="title-fees-4" checked="@myModel.IsFeesMoreThan300">
                        <label for="title-fees-4">Greater than 300</label>
                    </div>
                </div>
            </div>

            @{
                var openingDaysValues = Enum.GetValues(typeof(OpeningDays)).Cast<OpeningDays>();
            }

            <div class="filter-item">
                <a id="openingdays" class="collapsible-trigger" data-target="title">Opening Days</a>
                <div style="display:none" class="collapsible-content-fees" id="title-openingdays">
                    <div class="checkbox">
                        @{
                            foreach (var day in openingDaysValues)
                            {
                                 bool IsChecked = myModel.OpeningDays.HasFlag(day);
                                <input type="checkbox" class="OpeningDays" checked="@IsChecked" name="openDay" value="@((int)day)">
                                <label for="openDay">@day</label>
                            }
                        }
                    </div>
                </div>
            </div>

            <input id="submitBtn" type="submit" value="Filter" class="btn btn-primary" />
        </form>
    </div>
</div>
